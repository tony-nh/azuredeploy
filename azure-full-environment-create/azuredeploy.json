{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "_storacct",
      "metadata": {
        "description": "name of storage account"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "sysadmin",
      "metadata": {
        "description": "admin user name"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "ov-101Enterprise",
      "metadata": {
        "description": "admin password"
      }
    },
    "windowsVMNamePrefix": {
      "type": "string",
      "defaultValue": "_winvm",
      "metadata": {
        "description": "prefix to use for Windows VM names"
      }
    },
    "linuxVMNamePrefix": {
      "type": "string",
      "defaultValue": "_lnxvm",
      "metadata": {
        "description": "prefix to use for Linux VM names"
      }
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter, 2016-Datacenter."
      }
    },
    "linuxOSVersion": {
      "type": "string",
      "defaultValue": "7.3",
      "allowedValues": [
        "6.8",
        "6.9",
        "7.3",
        "7.5"
      ],
      "metadata": {
        "description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version. Allowed values: 6.8, 6.9, 7.3, 7.5."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "_vnet",
      "metadata": {
        "description": "name of virtual network"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "defaultValue": "_availset",
      "metadata": {
        "description": "name of availability set"
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "_nsg",
      "metadata": {
        "description": "name of  network security group"
      }
    }
  },
  "variables": {
    "availabilitySetName": "[parameters('availabilitySetName')]",
    "subnetName": "subnet1",
    "windowsImagePublisher": "MicrosoftWindowsServer",
    "windowsImageOffer": "WindowsServer",
    "linuxImagePublisher": "OpenLogic",
    "linuxImageOffer": "CentOS",
    "vmSize": "Standard_A2_v2",
    "windowsIPDNS": "[concat(parameters('windowsVMNamePrefix'), 'dns')]",
    "linuxIPDNS": "[concat(parameters('linuxVMNamePrefix'), 'dns')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]",
    "numberOfLinuxInstances": 2,
    "numberOfWindowsInstances": 4
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('nsgName')]",
      "location": "[resourceGroup().location]"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('linuxVMNamePrefix'), copyindex(1), '-ip')]",
      "copy": {
        "name": "publicIPAddressLoopLinux",
        "count": "[variables('numberOfLinuxInstances')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('linuxVMNamePrefix'), copyindex(1))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('windowsVMNamePrefix'), copyindex(1), '-ip')]",
      "copy": {
        "name": "publicIPAddressLoopWindows",
        "count": "[variables('numberOfWindowsInstances')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('windowsVMNamePrefix'), copyindex(1))]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/24"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/27"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('linuxVMNamePrefix'), copyindex(1), '-nic')]",
      "copy": {
        "name": "networkInterfaceLoopLinux",
        "count": "[variables('numberOfLinuxInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('linuxVMNamePrefix'), copyindex(1), '-ip')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('linuxVMNamePrefix'), copyindex(1), '-ip'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('windowsVMNamePrefix'), copyindex(1), '-nic')]",
      "copy": {
        "name": "networkInterfaceLoopWindows",
        "count": "[variables('numberOfWindowsInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('windowsVMNamePrefix'), copyindex(1), '-ip')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('windowsVMNamePrefix'), copyindex(1), '-ip'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('windowsVMNamePrefix'), copyindex(1))]",
      "copy": {
        "name": "virtualMachineLoopWindows",
        "count": "[variables('numberOfWindowsInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('windowsVMNamePrefix'), copyindex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('windowsVMNamePrefix'), copyindex(1))]",
          "adminUserName": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('windowsImagePublisher')]",
            "offer": "[variables('windowsImageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net/vhds/', parameters('windowsVMNamePrefix'), copyindex(1), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('windowsVMNamePrefix'), copyindex(1), '-nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachinesLinux",
      "name": "[concat(parameters('linuxVMNamePrefix'), copyindex(1))]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfLinuxInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('linuxVMNamePrefix'), copyindex(1), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('linuxVMNamePrefix'), copyindex(1))]",
          "adminUserName": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('linuxImagePublisher')]",
            "offer": "[variables('linuxImageOffer')]",
            "sku": "[parameters('linuxOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net/vhds/', parameters('linuxVMNamePrefix'), copyindex(1), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk",
              "diskSizeGB": "100",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net/vhds/', parameters('linuxVMNamePrefix'), copyindex(1), 'datadisk', '.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('linuxVMNamePrefix'), copyindex(1), '-nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://', parameters('storageAccountName'), '.blob.core.windows.net')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
